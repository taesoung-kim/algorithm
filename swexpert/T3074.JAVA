/* [문제]
 

M명의 사람이 입국심사를 받으려고 한다.

입국심사대에서는 한 줄 서기를 시행하고 있다.

심사대는 총 N개가 있어서 1번에서 N번 까지의 번호가 붙어있다.

k번 심사대에서 입국심사관이 심사를 하는 데 걸리는 시간은 tk이고 심사가 끝나면 지연 없이 다음 사람을 심사할 수 있다.

처음 모든 심사대는 비어 있고 심사를 할 준비가 되어 있다.

한 심사대에서는 한 명의 사람만 심사할 수 있으며, 사람들은 비어 있는 심사대가 있으면 바로 가서 심사를 받을 수 있다고 하자.

이 사람들이 모두 심사를 받기 위해 걸리는 최소한의 시간을 구하는 프로그램을 작성하라.

예를 들어 6명의 사람이 심사를 받기 위해 서있고, 두 심사대가 있고 각각 심사를 위해 걸리는 시간이 7초, 10초라고 하자.

가장 첫 두 사람은 즉시 심사를 받게 된다.

7초가 되면 첫 번째 심사대는 비어있게 되고, 세 번째 사람이 즉시 그곳으로 이동해서 심사를 받게 된다.

다음으로 10초가 되면 두 번째 심사대가 비어있게 되고, 네 번째 사람이 즉시 그곳으로 이동해서 심사를 받게 된다.

이런 식으로 28초가 되면 6명의 사람이 모두 심사가 끝난다.
 * 
 * 
 */


import java.util.Scanner;
import java.io.FileInputStream;

/* 
   사용하는 클래스명이 Solution 이어야 하므로, 가급적 Solution.java 를 사용할 것을 권장합니다.
   이러한 상황에서도 동일하게 java Solution 명령으로 프로그램을 수행해볼 수 있습니다.
 */
class Solution
{
	public static void main(String args[]) throws Exception
	{
		/*
		   아래의 메소드 호출은 앞으로 표준 입력(키보드) 대신 input.txt 파일로부터 읽어오겠다는 의미의 코드입니다.
		   여러분이 작성한 코드를 테스트 할 때, 편의를 위해서 input.txt에 입력을 저장한 후,
		   이 코드를 프로그램의 처음 부분에 추가하면 이후 입력을 수행할 때 표준 입력 대신 파일로부터 입력을 받아올 수 있습니다.
		   따라서 테스트를 수행할 때에는 아래 주석을 지우고 이 메소드를 사용하셔도 좋습니다.
		   단, 채점을 위해 코드를 제출하실 때에는 반드시 이 메소드를 지우거나 주석 처리 하셔야 합니다.
		 */
		//System.setIn(new FileInputStream("res/input.txt"));

		/*
		   표준입력 System.in 으로부터 스캐너를 만들어 데이터를 읽어옵니다.
		 */
		Scanner sc = new Scanner(System.in);
		int T;
		T=sc.nextInt();
		/*
		   여러 개의 테스트 케이스가 주어지므로, 각각을 처리합니다.
		*/

		for(int test_case = 1; test_case <= T; test_case++)
		{
            int N = sc.nextInt;
            int M = sc.nextInt;

            int[] tx = new int[N]

            
		}
	}
}